二、CSS部分
1、>作用于元素的第一代后代，空格作用于元素的所有后代。
2、* {color:red;}通用选择器
3、a:hover{color:red;}伪类选择符
4、有一些css样式是不具有继承性的。如border:1px solid red;
5、标签的权值为1，类选择符的权值为10，ID选择符的权值最高为100。继承也有权值但很低
6、p{color:red!important;}
7、body{font-family:"Microsoft Yahei";}微软雅黑，兼容性比写中文好。
8、p span{font-weight:bold;}文字排版--粗体
	p a{font-style:italic;}文字排版--斜体
	p a{text-decoration:underline;}文字排版--下划线
	 .oldPrice{text-decoration:line-through;}文字排版--删除线
	 p{text-indent:2em;}段落排版--缩进;p{line-height:1.5em;}段落排版--行间距（行高）
	 h1{letter-spacing:50px;}文字间隔或者字母间隔
	 h1{word-spacing:50px;}英文单词之间的间距
	 h1{text-align:center;}段落排版--对齐
9、常用的块状元素有：
	<div>、<p>、<h1>...<h6>、<ol>、<ul>、<dl>、<table>、<address>、<blockquote> 、<form>
	常用的内联元素有：
	<a>、<span>、<br>、<i>、<em>、<strong>、<label>、<q>、<var>、<cite>、<code>
	常用的内联块状元素有：
	<img>、<input>
10、块级元素特点：(a{display:block;})
	1、每个块级元素都从新的一行开始，并且其后的元素也另起一行。（真霸道，一个块级元素独占一行）
	2、元素的高度、宽度、行高以及顶和底边距都可设置。
	3、元素宽度在不设置的情况下，是它本身父容器的100%（和父元素的宽度一致），除非设定一个宽度
11、内联元素特点：(p{display:inline;})
	1、和其他元素都在一行上；
	2、元素的高度、宽度、行高及顶部和底部边距不可设置；
	3、元素的宽度就是它包含的文字或图片的宽度，不可改变。
	小伙伴们你们观查一下右侧代码段，有没有发现一个问题，内联元素之间有一个间距问题，这个问题在本小节的wiki中有介绍，感兴趣的小伙伴可以去查看。
12、inline-block元素特点：内联块状元素(display:inline-block)
	1、和其他元素都在一行上；
	2、元素的高度、宽度、行高以及顶和底边距都可设置。
	提示：下一小节是用视频动画来讲解css中的盒模型。
13、边框：div{border:2px  solid  red;}边框，dashed（虚线）| dotted（点线）| solid（实线）。border-color（边框颜色）border-width（边框宽度）
14、边框：div{border-bottom:1px solid red;}单独设置下边框
15、填充：div{padding:20px 10px 15px 30px;}上、右、下、左(顺时针)如果上下填充一样为10px，左右一样为20px，可以这么写：div{padding:10px 20px;}
16、边界：div{margin:20px 10px 15px 30px;}
17、在网页中，元素有三种布局模型：
	1、流动模型（Flow）：I.块状元素都会在所处的包含元素内自上而下按顺序垂直延伸分布，因为在默认状态下，块状元素的宽度都为100%。
						 II.内联元素都会在所处的包含元素内从左到右水平分布显示。(如果内联元素换行，则输出界面会显示空格)
	2、浮动模型 (Float)：#div1{float:left;}#div2{float:right;}
	3、层模型（Layer）：
						I.绝对定位(position: absolute)：如果想为元素设置层模型中的绝对定位，需要设置position:absolute(表示绝对定位)，这条语句的作用将元素从文档流中拖出来，然后使用left、right、top、bottom属性相对于其最接近的一个具有定位属性的父包含块进行绝对定位。如果不存在这样的包含块，则相对于body元素，即相对于浏览器窗口。
						II.相对定位(position: relative)：如果想为元素设置层模型中的相对定位，需要设置position:relative（表示相对定位），它通过left、right、top、bottom属性确定元素在正常文档流中的偏移位置。相对定位完成的过程是首先按static(float)方式生成一个元素(并且元素像层一样浮动了起来)，然后相对于以前的位置移动，移动的方向和幅度由left、right、top、bottom属性确定，偏移前的位置保留不动
						III.固定定位(position: fixed)：表示固定定位，与absolute定位类型类似，但它的相对移动的坐标是视图（屏幕内的网页窗口）本身。由于视图本身是固定的，它不会随浏览器窗口的滚动条滚动而变化，除非你在屏幕中移动浏览器窗口的屏幕位置，或改变浏览器窗口的显示大小，因此固定定位的元素会始终位于浏览器窗口内视图的某个位置，不会受文档流动影响，这与background-attachment:fixed;属性功能相同。
18、Relative与Absolute组合使用	
	1、参照定位的元素必须是相对定位元素的前辈元素：
	<div id="box1"><!--参照定位的元素-->
		<div id="box2">相对参照元素进行定位</div><!--相对定位元素-->
	</div>
	从上面代码可以看出box1是box2的父元素（父元素当然也是前辈元素了）。
	2、参照定位的元素必须加入position:relative;
	#box1{
	    width:200px;
	    height:200px;
	    position:relative;        
	}
	3、定位元素加入position:absolute，便可以使用top、bottom、left、right来进行偏移定位了。
	#box2{
	    position:absolute;
	    top:20px;
	    left:30px;         
	}
	这样box2就可以相对于父元素box1定位了（这里注意参照物就可以不是浏览器了，而可以自由设置了）。					
19、颜色值缩写	关于颜色的css样式也是可以缩写的，当你设置的颜色是16进制的色彩值时，如果每两位的值相同，可以缩写一半。p{color:#000000;}p{color:#000000;}p{color:#000000;}p{color:#000000;}
20、字体缩写
	body{
	    font-style:italic;
	    font-variant:small-caps; 
	    font-weight:bold; 
	    font-size:12px; 
	    line-height:1.5em; 
	    font-family:"宋体",sans-serif;
	}
	这么多行的代码其实可以缩写为一句：
		body{
	    font:italic  small-caps  bold  12px/1.5em  "宋体",sans-serif;
	}
	注意：
	1、使用这一简写方式你至少要指定 font-size 和 font-family 属性，其他的属性(如 font-weight、font-style、font-varient、line-height)如未指定将自动使用默认值。
21、长度值：长度单位总结一下，目前比较常用到px（像素）、em、% 百分比，要注意其实这三种单位都是相对单位。
	em
	就是本元素给定字体的 font-size 值，如果元素的 font-size 为 14px ，那么 1em = 14px；如果 font-size 为 18px，那么 1em = 18px。
	注意：
	但当给 font-size 设置单位为 em 时，此时计算的标准以 p 的父元素的 font-size 为基础。如下代码：
22、水平居中设置-行内元素：如果被设置元素为文本、图片等行内元素时，水平居中是通过给父元素设置 text-align:center 来实现的。
23、水平居中设置-定宽块状元素：
	满足定宽和块状两个条件的元素是可以通过设置“左右margin”值为“auto”来实现居中的。我们来看个例子就是设置 div 这个块状元素水平居中：
	html代码：
	<body>
	  <div>我是定宽块状元素，哈哈，我要水平居中显示。</div>
	</body>
	css代码：
	<style>
	div{
	    border:1px solid red;/*为了显示居中效果明显为 div 设置了边框*/
	    
	    width:500px;/*定宽*/
	    margin:20px auto;/* margin-left 与 margin-right 设置为 auto */
	}
	</style>/*width、margin:auto两个条件缺一不可*/
24、水平居中设置-不定宽块状元素方法：
	I.加入 table 标签
		html代码：
		<div>
		<table>
		  <tbody>
		    <tr><td>
		    <ul>
		        <li><a href="#">1</a></li>
		        <li><a href="#">2</a></li>
		        <li><a href="#">3</a></li>
		    </ul>
		    </td></tr>
		  </tbody>
		</table>
		</div>
		css代码：
		<style>
		table{
		    margin:0 auto;
		}
		ul{list-style:none;margin:0;padding:0;}
		li{float:left;display:inline;margin-right:8px;}
		</style>
	II.设置 display;inline 方法:改变块级元素的 dispaly 为 inline 类型，然后使用 text-align:center 来实现居中效果。如下例子：
		html代码：
		<body>
		<div class="container">
		    <ul>
		        <li><a href="#">1</a></li>
		        <li><a href="#">2</a></li>
		        <li><a href="#">3</a></li>
		    </ul>
		</div>
		</body>
		css代码：
		<style>
		.container{
		    text-align:center;
		}
		.container ul{
		    list-style:none;
		    margin:0;
		    padding:0;
		    display:inline;
		}
		.container li{
		    margin-right:8px;
		    display:inline;
		}
		</style>/*这种方法相比第一种方法的优势是不用增加无语义标签，简化了标签的嵌套深度，但也存在着一些问题：它将块状元素的 display 类型改为 inline，变成了行内元素，所以少了一些功能，比如设定长度值。*/
	III.设置 position:relative 和 left:50%;通过给父元素设置 float，然后给父元素设置 position:relative 和 left:50%，子元素设置 position:relative 和 left:-50% 来实现水平居中。
		代码如下：
		<body>
		<div class="container">
		    <ul>
		        <li><a href="#">1</a></li>
		        <li><a href="#">2</a></li>
		        <li><a href="#">3</a></li>
		    </ul>
		</div>
		</body>
		css代码：
		<style>
		.container{
		    float:left;
		    position:relative;
		    left:50%
		}

		.container ul{
		    list-style:none;
		    margin:0;
		    padding:0;
		    
		    position:relative;
		    left:-50%;
		}
		.container li{float:left;display:inline;margin-right:8px;}
		</style>/*这种方法可以保留块状元素仍以 display:block 的形式显示，优点不添加无语议表标签，不增加嵌套深度，但它的缺点是设置了 position:relative，带来了一定的副作用。*/
25、垂直居中-父元素高度确定的单行文本：父元素高度确定的单行文本的竖直居中的方法是通过设置父元素的 height 和 line-height 高度一致来实现的	
		<div class="container">
		    hi,imooc!
		</div>
		css代码：
		<style>
		.container{
		    height:100px;
		    line-height:100px;
		    background:#999;
		}
		</style>
26、垂直居中-父元素高度确定的多行文本
	I.方法一
			使用插入 table (包括tbody、tr、td)标签，同时设置 vertical-align：middle。
			说到竖直居中，css 中有一个用于竖直居中的属性 vertical-align，但这个样式只有在父元素为 td 或 th 时，才会生效。所以又要插入 table 标签了。下面看一下例子：
			html代码：
			<body>
			<table><tbody><tr><td class="wrap">
			<div>
			    <p>看我是否可以居中。</p>
			    <p>看我是否可以居中。</p>
			    <p>看我是否可以居中。</p>
			    <p>看我是否可以居中。</p>
			    <p>看我是否可以居中。</p>
			</div>
			</td></tr></tbody></table>
			</body>
			css代码：
			table td{height:500px;background:#ccc}
			因为 td 标签默认情况下就默认设置了 vertical-align 为 middle，所以我们不需要显式地设置了。
	II.方法二
			在 chrome、firefox 及 IE8 以上的浏览器下可以设置块级元素的 display 为 table-cell，激活 vertical-align 属性，但注意 IE6、7 并不支持这个样式。
			html代码：
			<div class="container">
			    <div>
			        <p>看我是否可以居中。</p>
			        <p>看我是否可以居中。</p>
			        <p>看我是否可以居中。</p>
			        <p>看我是否可以居中。</p>
			        <p>看我是否可以居中。</p>
			    </div>
			</div>
			css代码：
			<style>
			.container{
			    height:300px;
			    background:#ccc;
			    display:table-cell;/*IE8以上及Chrome、Firefox*/
			    vertical-align:middle;/*IE8以上及Chrome、Firefox*/
			}
			</style>
			这种方法的好处是不用添加多余的无意义的标签，但缺点也很明显，它的兼容性不是很好，不兼容 IE6、7。		
27、隐性改变display类型			
	有一个有趣的现象就是当为元素（不论之前是什么类型元素，display:none 除外）设置以下 2 个句之一：
	position : absolute
	float : left 或 float:right
	元素会自动变为以 display:inline-block 的方式显示，当然就可以设置元素的 width 和 height 了且默认宽度不占满父元素。
/*以上部分为imooc网学习笔记，该类型其它笔记请写在下面*/